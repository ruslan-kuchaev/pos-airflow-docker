#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import psycopg2
import pandas as pd
from datetime import datetime, timedelta
import sys

def connect_to_db():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = psycopg2.connect(
            host="localhost",
            port="5432",
            database="airflow",
            user="airflow",
            password="airflow"
        )
        return conn
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def get_latest_rates():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç"""
    conn = connect_to_db()
    if not conn:
        return None
    
    try:
        query = """
        SELECT char_code, name, value, date
        FROM currency_rates 
        WHERE date = (SELECT MAX(date) FROM currency_rates)
        ORDER BY value DESC
        """
        
        df = pd.read_sql_query(query, conn)
        return df
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    finally:
        conn.close()

def get_currency_history(char_code, days=30):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã"""
    conn = connect_to_db()
    if not conn:
        return None
    
    try:
        query = """
        SELECT date, value
        FROM currency_rates 
        WHERE char_code = %s 
            AND date >= %s
        ORDER BY date DESC
        LIMIT %s
        """
        
        start_date = datetime.now() - timedelta(days=days)
        df = pd.read_sql_query(query, conn, params=[char_code, start_date, days])
        return df
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    finally:
        conn.close()

def get_top_volatile_currencies(days=7):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∞–º—ã—Ö –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã—Ö –≤–∞–ª—é—Ç"""
    conn = connect_to_db()
    if not conn:
        return None
    
    try:
        query = """
        SELECT 
            char_code,
            COUNT(*) as records,
            MIN(value) as min_value,
            MAX(value) as max_value,
            ROUND((MAX(value) - MIN(value)) / MIN(value) * 100, 2) as volatility_percent
        FROM currency_rates 
        WHERE date >= %s
        GROUP BY char_code
        HAVING COUNT(*) >= %s
        ORDER BY volatility_percent DESC
        LIMIT 10
        """
        
        start_date = datetime.now() - timedelta(days=days)
        df = pd.read_sql_query(query, conn, params=[start_date, days])
        return df
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None
    finally:
        conn.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫—É—Ä—Å—ã
    print("\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç:")
    rates = get_latest_rates()
    if rates is not None and not rates.empty:
        print(rates.to_string(index=False))
    else:
        print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-10 –≤–∞–ª—é—Ç
    print(f"\nüèÜ –¢–æ–ø-10 –≤–∞–ª—é—Ç –ø–æ –∫—É—Ä—Å—É:")
    top_rates = rates.head(10)
    print(top_rates.to_string(index=False))
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã
    print(f"\nüíµ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã:")
    main_currencies = rates[rates['char_code'].isin(['USD', 'EUR', 'GBP', 'CNY', 'JPY'])]
    if not main_currencies.empty:
        print(main_currencies.to_string(index=False))
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
    print(f"\nüìà –°–∞–º—ã–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã–µ –≤–∞–ª—é—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π:")
    volatile = get_top_volatile_currencies(7)
    if volatile is not None and not volatile.empty:
        print(volatile.to_string(index=False))
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é USD –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    if len(sys.argv) > 1 and sys.argv[1] == "--history":
        print(f"\nüìâ –ò—Å—Ç–æ—Ä–∏—è –∫—É—Ä—Å–∞ USD –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:")
        usd_history = get_currency_history('USD', 30)
        if usd_history is not None and not usd_history.empty:
            print(usd_history.to_string(index=False))
    
    print(f"\nüí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ USD –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python {sys.argv[0]} --history")
    print(f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Airflow: http://localhost:8080")
    print(f"üìä –î–∞—à–±–æ—Ä–¥—ã Metabase: http://localhost:3000")

if __name__ == "__main__":
    main()
